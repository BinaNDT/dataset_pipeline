name: Security Checks

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  check-credentials:
    name: Check for exposed credentials
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install detect-secrets==1.4.0
          
      - name: Run credential scanner
        run: |
          detect-secrets scan --baseline .secrets.baseline
          
      - name: Check for API keys in config
        run: |
          echo "Checking for hardcoded credentials..."
          ! grep -E "API_KEY.*=.*[A-Za-z0-9/+]{8,}" --include="*.py" -r .
          ! grep -E "PROJECT_ID.*=.*[A-Za-z0-9]{10,}" --include="*.py" -r .
          ! grep -E "SECRET.*=.*[A-Za-z0-9/+]{8,}" --include="*.py" -r .
          ! grep -E "PASSWORD.*=.*[A-Za-z0-9/+]{8,}" --include="*.py" -r .
          echo "No hardcoded credentials found."
          
  check-env-files:
    name: Check for committed .env files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Check for .env files
        run: |
          echo "Checking for committed .env files..."
          if find . -type f -name ".env" | grep -q .; then
            echo "ERROR: .env file found in repository. These should never be committed."
            find . -type f -name ".env"
            exit 1
          else
            echo "No .env files found. Good!"
          fi
          
          # Ensure .env.example exists
          if [ ! -f ".env.example" ]; then
            echo "ERROR: .env.example file is missing. This template is required."
            exit 1
          fi
          
          echo "All environment file checks passed."
          
  python-security:
    name: Python security checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      
      - name: Check for security vulnerabilities
        run: bandit -r . -x "./tests/*"
        
      - name: Check dependencies for vulnerabilities
        run: safety check -r requirements.txt 